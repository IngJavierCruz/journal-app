{"version":3,"sources":["types/types.js","reducers/notesReducer.js","reducers/uiReducer.js","store/store.js","reducers/authReducers.js","hooks/useForm.js","firebase/firebase-config.js","actions/ui.js","helpers/loadNotes.js","helpers/fileUpload.js","actions/notes.js","actions/auth.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/journal/NothingSelected.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/JournalScreen.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","JournalApp.js","index.js"],"names":["types","initialState","notes","active","loading","msgError","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","auth","state","action","type","uid","payload","name","displayName","ui","map","note","id","filter","store","createStore","applyMiddleware","thunk","useForm","useState","values","setvalues","target","value","newFormState","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","googleAuthProvider","GoogleAuthProvider","setError","err","finishLoading","loadNotes","a","collection","get","notesSnap","forEach","snapHijo","push","data","fileUpload","file","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","addNewNote","activeNote","setNotes","startLoadingNotes","dispatch","startSaveNote","getState","url","noteFirestore","doc","update","refreshNote","Swal","fire","title","deleteNote","startLoginEmailPassword","email","password","signInWithEmailAndPassword","then","user","login","catch","e","message","logout","LoginScreen","useDispatch","useSelector","formValues","handleInputChange","className","onSubmit","preventDefault","placeholder","autoComplete","onChange","disabled","onClick","signInWithPopup","src","alt","to","RegisterScreen","password2","handleRegister","isFormValid","createUserWithEmailAndPassword","updateProfile","startRegisterUser","console","log","trim","length","validator","isEmail","AuthRouter","exact","path","component","JournalEntry","date","noteDate","moment","style","backgroundSize","backgroundImage","format","JournalEntries","Sidebar","signOut","newNote","Date","getTime","add","docRef","NothingSelected","NotesAppBar","display","files","text","allowOutsideClick","showConfirmButton","willOpen","showLoading","fileUrl","close","startUploading","document","querySelector","click","NoteScreen","noteActive","reset","activeId","useRef","useEffect","current","delete","JournalScreen","PrivateRoute","isAuthenticated","Component","rest","props","PublicRoute","AppRouter","checking","setChecking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.67e9e56c.chunk.js","sourcesContent":["export const types = {\r\n    login: '[Auth] Login',\r\n    logout: '[Auth] Logout',\r\n\r\n    uiSetError: '[UI] Set Error',\r\n    uiRemoveError: '[UI] Remove Error',\r\n\r\n    uiStartLoading: '[UI] Start loading',\r\n    uiFinishLoading: '[UI] Finish loading',\r\n\r\n    notesAddNew: '[Notes] New note',\r\n    notesActive: '[Notes] Set active note',\r\n    notesLoad: '[Notes] Load note',\r\n    notesUpdated: '[Notes] Updated note',\r\n    notesFileUrl: '[Notes] Update image url',\r\n    notesDelete: '[Notes] Delete note',\r\n    notesLogoutCleaning: '[Notes] Logout cleaning'\r\n}","import { types } from './../types/types';\r\n\r\n\r\nconst initialState = {\r\n    notes: [],\r\n    active: null\r\n}\r\n\r\nexport const notesReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case types.notesActive:\r\n            return {\r\n                ...state,\r\n                active:{\r\n                    ...action.payload\r\n                }\r\n            }\r\n        \r\n        case types.notesLoad:\r\n            return {\r\n                ...state,\r\n                notes: [ ...action.payload ]\r\n            }\r\n        \r\n        case types.notesAddNew:\r\n            return {\r\n                ...state,\r\n                notes: [\r\n                    action.payload,\r\n                    ...state.notes\r\n                ]\r\n            }\r\n\r\n\r\n        case types.notesUpdated:\r\n            return {\r\n                ...state,\r\n                notes: \r\n                    state.notes.map( \r\n                        note => note.id === action.payload.id\r\n                        ? action.payload.note\r\n                        : note\r\n                    )\r\n            }            \r\n\r\n        case types.notesDelete:\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes: state.notes.filter(note => note.id !== action.payload)\r\n            }\r\n\r\n        case types.notesLogoutCleaning:\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes: []\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n","import { types } from './../types/types';\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    msgError: null\r\n}\r\n\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n    \r\n    switch (action.type) {\r\n        case types.uiSetError:\r\n            return {\r\n                ...state,\r\n                msgError: action.payload\r\n            }\r\n\r\n        case types.uiRemoveError:\r\n            return  {\r\n                ...state,\r\n                msgError: null\r\n            }\r\n\r\n        case types.uiStartLoading:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case types.uiFinishLoading:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n            \r\n        default:\r\n            return state;\r\n    }    \r\n}","import { applyMiddleware, combineReducers, compose, createStore } from \"redux\";\r\nimport thunk from 'redux-thunk';\r\nimport { notesReducer } from \"../reducers/notesReducer\";\r\nimport { authReducer } from './../reducers/authReducers';\r\nimport { uiReducer } from './../reducers/uiReducer';\r\n\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    ui: uiReducer,\r\n    notes: notesReducer\r\n});\r\n\r\nexport const store = createStore(\r\n    reducers, \r\n    composeEnhancers(\r\n        applyMiddleware( thunk )\r\n    )\r\n);","import { types } from \"../types/types\";\r\n\r\nexport const authReducer = (state= {}, action) => {\r\n    \r\n    switch (action.type) {\r\n        case types.login:\r\n            return {\r\n                uid: action.payload.uid,\r\n                name: action.payload.displayName\r\n            }\r\n\r\n        case types.logout:\r\n            return { }\r\n         \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import { useState } from 'react';\r\n\r\nexport const useForm = (initialState) => {\r\n\r\n    const [values, setvalues] = useState(initialState);\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        \r\n        setvalues({\r\n            ...values,\r\n            [target.name]: target.value\r\n        });\r\n\r\n    }\r\n\r\n\r\n    const reset = ( newFormState = initialState ) => {\r\n        setvalues(newFormState);\r\n    }\r\n\r\n\r\n    return [ values, handleInputChange, reset];\r\n}\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAuwzQIipYV6mqH6oUOty_0LJrMbgepx_s\",\r\n  authDomain: \"journal-app-6a21b.firebaseapp.com\",\r\n  projectId: \"journal-app-6a21b\",\r\n  storageBucket: \"journal-app-6a21b.appspot.com\",\r\n  messagingSenderId: \"789255495275\",\r\n  appId: \"1:789255495275:web:35a8097372f5bd0bdb5b2e\",\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst db = firebase.firestore();\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\n\r\nexport {\r\n    db,\r\n    googleAuthProvider,\r\n    firebase\r\n}\r\n","import { types } from './../types/types';\r\n\r\nexport const setError = (err) => ({\r\n  type: types.uiSetError,\r\n  payload: err  \r\n});\r\n\r\n\r\nexport const removeError = () => ({\r\n    type: types.uiRemoveError\r\n});\r\n\r\n\r\nexport const startLoading = () => ({\r\n  type: types.uiStartLoading\r\n});\r\n\r\n\r\nexport const finishLoading = () => ({\r\n  type: types.uiFinishLoading\r\n});\r\n","import { db } from \"../firebase/firebase-config\"\r\n\r\nexport const loadNotes = async(uid) => {\r\n\r\n    const notesSnap = await db.collection(`${uid}/journal/notes`).get();\r\n    const notes = [];\r\n\r\n    notesSnap.forEach(snapHijo => {\r\n        notes.push({\r\n            id: snapHijo.id,\r\n            ...snapHijo.data()\r\n        });\r\n    });\r\n\r\n    return notes;\r\n \r\n}","export const fileUpload = async(file) => {\r\n    \r\n    const cloudUrl = 'https://api.cloudinary.com/v1_1/dy8scrp8n/upload';\r\n\r\n    const formData = new FormData();\r\n    formData.append('upload_preset', 'journal-app');\r\n    formData.append('file', file);\r\n\r\n    try {\r\n\r\n        const resp = await fetch(cloudUrl, {\r\n            method: 'POST',\r\n            body: formData\r\n        });\r\n\r\n        if ( resp.ok ) {\r\n            const cloudResp = await resp.json();\r\n            return cloudResp.secure_url;\r\n        } else {\r\n            throw await resp.json();\r\n        }\r\n\r\n\r\n\r\n    } catch (err) {\r\n        throw err;        \r\n    }\r\n\r\n}","import { db } from \"../firebase/firebase-config\";\r\nimport { types } from './../types/types';\r\nimport { loadNotes } from './../helpers/loadNotes';\r\nimport  Swal from 'sweetalert2';\r\nimport { fileUpload } from './../helpers/fileUpload';\r\n\r\nexport const startNewNote = () => {\r\n\r\n    return async( dispatch, getState) => {\r\n\r\n        const { uid } = getState().auth;\r\n        \r\n        const newNote = {\r\n            title: '',\r\n            body:'',\r\n            date: new Date().getTime()\r\n        };\r\n\r\n        const docRef = await db.collection(`${ uid }/journal/notes`).add(newNote);\r\n        dispatch( activeNote(docRef.id, newNote) );\r\n        dispatch( addNewNote( docRef.id, newNote) );\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport const addNewNote = (id, note) => ({\r\n    type: types.notesAddNew,\r\n    payload: {\r\n        id,\r\n        ...note\r\n    }\r\n})\r\n\r\nexport const activeNote = ( id, note ) => ({\r\n  type: types.notesActive,\r\n  payload: { id, ...note }  \r\n});\r\n\r\n\r\nexport const setNotes = ( notes ) => ({\r\n    type: types.notesLoad,\r\n    payload: notes\r\n});\r\n\r\n\r\nexport const startLoadingNotes = ( uid ) => {\r\n    \r\n    return async( dispatch ) => {\r\n\r\n        const notes = await loadNotes( uid );\r\n        dispatch( setNotes(notes) );\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const startSaveNote = (note) => {\r\n    \r\n    return async( dispatch, getState ) => {\r\n\r\n        const { uid } = getState().auth;\r\n\r\n        if (!note.url) {\r\n            delete note.url;\r\n        }\r\n\r\n        const noteFirestore = { ...note };\r\n        delete noteFirestore.id;\r\n        \r\n        await db.doc(`${ uid }/journal/notes/${ note.id }`).update( noteFirestore );\r\n\r\n        dispatch( refreshNote(note.id, noteFirestore ));\r\n        Swal.fire('Saved', note.title, 'success');\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const refreshNote = ( id, note ) => ({\r\n    type: types.notesUpdated,\r\n    payload: {\r\n        id,\r\n        note: {\r\n            id,\r\n            ...note\r\n        }\r\n    }   \r\n});\r\n\r\n\r\nexport const startUploading = (file) => {\r\n    \r\n    return async(dispatch, getState) => {\r\n\r\n        const { active: activeNote } = getState().notes;\r\n\r\n        Swal.fire({\r\n            title: 'Uploading...',\r\n            text: 'Please wait...',\r\n            allowOutsideClick: false,\r\n            showConfirmButton: false,\r\n            willOpen: () => {\r\n                Swal.showLoading();\r\n            }\r\n        });\r\n\r\n        const fileUrl = await fileUpload(file);\r\n        activeNote.url = fileUrl;\r\n        dispatch( startSaveNote(activeNote) );\r\n\r\n        Swal.close();\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const startDeleting = (id) => {\r\n    return async(dispatch, getState) => {\r\n        const { uid } = getState().auth;\r\n\r\n        await db.doc(`${ uid }/journal/notes/${ id }`).delete();\r\n        dispatch( deleteNote(id) );\r\n    }\r\n}\r\n\r\n\r\nexport const deleteNote = (id) => ({\r\n    type: types.notesDelete,\r\n    payload: id\r\n});\r\n\r\n\r\nexport const noteLogout = () => ({\r\n  type: types.notesLogoutCleaning  \r\n})","import { types } from './../types/types';\r\nimport Swal from 'sweetalert2'\r\nimport { firebase, googleAuthProvider } from '../firebase/firebase-config';\r\nimport { finishLoading, startLoading } from './ui';\r\nimport { noteLogout } from './notes';\r\n\r\nexport const startLoginEmailPassword = (email, password) => {\r\n\r\n\r\n  return (dispatch) => {\r\n\r\n    dispatch( startLoading() );\r\n    firebase.auth().signInWithEmailAndPassword(email, password)\r\n      .then( ({ user }) => {\r\n        dispatch( login(user.uid, user.displayName) );\r\n        dispatch( finishLoading() );\r\n      })\r\n      .catch( (e) => {\r\n        dispatch( finishLoading() );\r\n        Swal.fire('Error', e.message, 'error' );\r\n      });\r\n\r\n  }\r\n}\r\n\r\n\r\nexport const startRegisterUser = (email, password, name) => {\r\n\r\n  return ( dispatch ) => {\r\n\r\n    firebase.auth().createUserWithEmailAndPassword(email, password)\r\n      .then( async({ user }) => {\r\n\r\n        await user.updateProfile({ displayName: name });\r\n\r\n        dispatch( login(user.uid, user.displayName) );\r\n\r\n      })\r\n      .catch(e => {\r\n        Swal.fire('Error', e.message, 'error' );\r\n      });   \r\n  }\r\n}\r\n\r\n\r\nexport const startGoogleLogin = () => {\r\n  return (dispatch) => {\r\n\r\n    firebase.auth().signInWithPopup(googleAuthProvider)\r\n      .then( ({ user }) => {\r\n        dispatch(\r\n          login( user.uid, user.displayName)\r\n        )\r\n      })\r\n  }\r\n  \r\n}\r\n\r\nexport const login = (uid, displayName) => ({\r\n  type: types.login,\r\n  payload: { uid, displayName }  \r\n});\r\n\r\n\r\nexport const startLogout = () => {\r\n  return async(dispatch) => {\r\n\r\n    await firebase.auth().signOut();\r\n    dispatch( logout() );\r\n    dispatch( noteLogout() )\r\n\r\n  }\r\n}\r\n\r\n\r\nexport const logout = () => ({\r\n  type: types.logout\r\n});","import React, { Fragment } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { useForm } from './../../hooks/useForm';\r\nimport { startGoogleLogin, startLoginEmailPassword } from './../../actions/auth';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { loading } = useSelector(state => state.ui);\r\n  \r\n\r\n    const [ formValues, handleInputChange ] = useForm({\r\n        email: 'wili_javi-@hotmail.com',  \r\n        password: '123456'\r\n    })\r\n\r\n\r\n\r\n    const { email, password } = formValues;\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        dispatch( startLoginEmailPassword(email, password) );\r\n    }\r\n\r\n    const handleGoogleLogin = () => {\r\n        dispatch( startGoogleLogin() );\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <h3 className=\"auth__title\">Login</h3>\r\n\r\n            <form onSubmit={ handleSubmit }>\r\n                <input \r\n                    type='text' \r\n                    placeholder='Email'\r\n                    name='email'\r\n                    autoComplete='off'\r\n                    className=\"auth__input\"\r\n                    value={ email }\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n\r\n                <input \r\n                    type='password' \r\n                    placeholder='Password'\r\n                    name='password'\r\n                    className=\"auth__input\"\r\n                    value={ password }\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <button \r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block\"        \r\n                    disabled={loading}\r\n                >\r\n                    Ingresar\r\n                </button>\r\n\r\n\r\n                <div className=\"auth__social-networks\">\r\n                    <p>Login with social networks</p>\r\n                    <div className=\"google-btn\" onClick={ handleGoogleLogin }>\r\n                        <div className=\"google-icon-wrapper\">\r\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\r\n                        </div>\r\n                        <p className=\"btn-text\">\r\n                            <b>Sign in with google</b>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n\r\n                <Link to='/auth/register' className=\"link\">\r\n                    Create new account\r\n                </Link>\r\n\r\n            </form>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n","import React, { Fragment } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom'\r\nimport validator from 'validator';\r\n\r\nimport { useForm } from './../../hooks/useForm';\r\nimport { removeError, setError } from './../../actions/ui';\r\nimport { startRegisterUser } from '../../actions/auth';\r\n\r\nexport const RegisterScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { msgError } = useSelector(state => state.ui);\r\n\r\n    const [formValues, handleInputChange ] = useForm({\r\n        name:'',\r\n        email:'',\r\n        password: '',\r\n        password2: ''\r\n    });\r\n\r\n    const { name, email, password, password2 } = formValues;\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (isFormValid()) {\r\n            dispatch( startRegisterUser(email, password, name) );\r\n            console.log('Formulario correcto');\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const isFormValid = () => {\r\n\r\n        if (name.trim().length === 0) {\r\n            dispatch( setError('Name is required'));\r\n            return false;         \r\n        } else if (!validator.isEmail(email)){\r\n            dispatch( setError('Email is not valid'));\r\n            return false;         \r\n        } else if (password !== password2 || password.length < 5) {\r\n            dispatch( setError('Password should be at least 6 characters and match'));\r\n            return false;\r\n        }\r\n\r\n        dispatch( removeError() )\r\n        return true;\r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <h3 className=\"auth__title\">Register</h3>\r\n\r\n            <form onSubmit={ handleRegister }>\r\n\r\n                {   \r\n                    msgError && \r\n                    (\r\n                        <div className=\"auth__alert-error\">\r\n                            { msgError }\r\n                        </div>\r\n                    )\r\n                }\r\n\r\n\r\n                <input \r\n                    type='text' \r\n                    placeholder='Name'\r\n                    name='name'\r\n                    autoComplete='none'\r\n                    className=\"auth__input\"\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <input \r\n                    type='text' \r\n                    placeholder='Email'\r\n                    name='email'\r\n                    autoComplete='off'\r\n                    className=\"auth__input\"\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n\r\n                <input \r\n                    type='password' \r\n                    placeholder='Password'\r\n                    name='password'\r\n                    className=\"auth__input\"\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <input \r\n                    type='password' \r\n                    placeholder='Confirm password'\r\n                    name='password2'\r\n                    className=\"auth__input\"\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <button \r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block mt-5\"\r\n                    onClick={ handleRegister }\r\n                >\r\n                    Registrar\r\n                </button>\r\n\r\n                <Link to='/auth/login' className=\"link\">\r\n                    Already registered?\r\n                </Link>\r\n\r\n            </form>\r\n\r\n        </Fragment>\r\n\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\nimport { LoginScreen } from './../components/auth/LoginScreen';\r\nimport { RegisterScreen } from './../components/auth/RegisterScreen';\r\n\r\nexport const AuthRouter = () => {\r\n    return (\r\n        <div className=\"auth__main\">\r\n            <div className=\"auth__box-container\">\r\n                <Switch>\r\n                    <Route exact path='/auth/login' component={ LoginScreen } />\r\n                    <Route exact path='/auth/register' component={ RegisterScreen } />\r\n                    <Redirect to='/auth/login' />\r\n                </Switch>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import moment from 'moment';\r\nimport React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { activeNote } from './../../actions/notes';\r\n\r\nexport const JournalEntry = ({ id, date, title, body, url }) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const noteDate = moment(date);\r\n\r\n    const handleSelectedEntry = () => {\r\n        dispatch( activeNote( id, { id, date, title, body, url } ));\r\n    }\r\n\r\n    return (\r\n        <div className=\"journal__entry pointer\" onClick={ handleSelectedEntry }>\r\n\r\n            {\r\n                url &&\r\n                (<div \r\n                    className=\"journal__entry-picture\"\r\n                    style={{ \r\n                        backgroundSize: 'cover',\r\n                        backgroundImage: `url(${url})`\r\n                    }}\r\n                >\r\n                </div>)\r\n            }\r\n\r\n            <div className=\"journal__entry-body\">\r\n                <p className=\"jorunal__entry-title\">{ title} </p>\r\n                <p className=\"jorunal__entry-content\">{ body }</p>\r\n            </div>\r\n\r\n            <div className=\"journal__entry-date-box\">\r\n                <span>{ noteDate.format('dddd') }</span>\r\n                <h4>{ noteDate.format('Do') }</h4>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { JournalEntry } from './JournalEntry';\r\n\r\nexport const JournalEntries = () => {\r\n\r\n    const { notes } = useSelector(state => state.notes);\r\n\r\n    return (\r\n        <div className=\"journal__entries\">\r\n            {\r\n                notes.map( note => (\r\n                  <JournalEntry key={ note.id } {...note} />  \r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startLogout } from '../../actions/auth';\r\nimport { startNewNote } from '../../actions/notes';\r\nimport { JournalEntries } from './JournalEntries';\r\n\r\nexport const Sidebar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { name } = useSelector(state => state.auth)\r\n\r\n    const handleLogout = () => {\r\n        dispatch( startLogout() );\r\n    }\r\n\r\n    const handleNewEntry = () => {\r\n        dispatch( startNewNote() );\r\n    }\r\n\r\n    return (\r\n        <aside className=\"journal__sidebar\"> \r\n            \r\n            <div className=\"journal__sidebar-navbar\">\r\n                <h3 className=\"mt-5\"> \r\n                    <i className=\"far fa-moon\"></i>\r\n                    <span> { name } </span>\r\n                </h3>\r\n\r\n                <button className=\"btn\" onClick={ handleLogout }>\r\n                    Logout\r\n                </button>\r\n            </div>\r\n\r\n            <div className=\"journal__new-entry\" onClick={ handleNewEntry }>\r\n                <i className=\"far fa-calendar-plus fa-5x\"></i>\r\n                <p className=\"mt-5\">New entry</p>\r\n            </div>\r\n\r\n            <JournalEntries />\r\n\r\n        </aside>\r\n    ) \r\n}\r\n","import React from 'react'\r\n\r\nexport const NothingSelected = () => {\r\n    return (\r\n        <div className=\"nothing__main-content\">\r\n            <p>\r\n                Select something\r\n                <br />\r\n                pr create an entry\r\n            </p>\r\n            <i className=\"far fa-star fa-4x mt-5\"></i>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startSaveNote, startUploading } from '../../actions/notes';\r\n// journal-app\r\nexport const NotesAppBar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { active } = useSelector(state => state.notes);\r\n\r\n    const handleUpdateNote = (e) => {\r\n        dispatch( startSaveNote(active) );\r\n    }\r\n\r\n    const handlePictureClick = () => {\r\n        document.querySelector('#fileSelector').click();\r\n    }\r\n\r\n    const handleFileChange = (e) => {\r\n        const file = e.target.files[0];\r\n\r\n        if (file) {\r\n            dispatch( startUploading(file) );\r\n        }\r\n\r\n    }   \r\n\r\n    return (\r\n        <div className=\"notes__appbar\">\r\n            <span>28 de agosto 2020</span>\r\n\r\n            <input \r\n                id=\"fileSelector\"\r\n                type=\"file\" \r\n                name=\"file\"\r\n                style={{ display: 'none' }} \r\n                onChange={ handleFileChange }\r\n            />\r\n\r\n            <div>\r\n                <button className=\"btn\" onClick={ handlePictureClick } >\r\n                    Picture\r\n                </button>\r\n\r\n                <button className=\"btn\" onClick={ handleUpdateNote } >\r\n                    Save\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useRef } from 'react'\r\nimport { NotesAppBar } from './NotesAppBar';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useForm } from './../../hooks/useForm';\r\nimport { activeNote, startDeleting } from './../../actions/notes';\r\n\r\nexport const NoteScreen = () => {\r\n\r\n    const { active: noteActive} = useSelector(state => state.notes );\r\n    const [ formValues, handleInputChange, reset ] = useForm(noteActive);\r\n    const { body, title } = formValues;\r\n    const dispatch = useDispatch();\r\n    const activeId = useRef( noteActive.id );\r\n\r\n    useEffect(() => {\r\n        \r\n        if( activeId.current !== noteActive.id ) {\r\n            reset( noteActive );\r\n            activeId.current = noteActive.id;\r\n        }\r\n\r\n\r\n    }, [ noteActive, reset ])\r\n\r\n\r\n    useEffect(() => {       \r\n        dispatch( activeNote( formValues.id, { ...formValues } ) );\r\n    }, [ formValues, useDispatch ]);\r\n\r\n\r\n    const handleDelete = () => {\r\n        dispatch( startDeleting(noteActive.id) );\r\n    }\r\n\r\n    return (\r\n        <div className=\"notes_main-content\">\r\n            \r\n            <NotesAppBar />\r\n\r\n            <div className=\"notes__content\">\r\n\r\n                <input  \r\n                    type=\"text\"\r\n                    name=\"title\"\r\n                    placeholder=\"Some awesome title\"\r\n                    className=\"notes__title-input\"\r\n                    autoComplete=\"none\"\r\n                    onChange={ handleInputChange }\r\n                    value={ title }\r\n                />\r\n\r\n                <textarea\r\n                    name=\"body\"\r\n                    placeholder=\"What happened today\"\r\n                    className=\"notes__textarea\"\r\n                    onChange={ handleInputChange }\r\n                    value={ body }\r\n                ></textarea>\r\n\r\n                {\r\n                    (noteActive.url) && \r\n                    (\r\n                        <div className=\"notes__img\">\r\n                            <img \r\n                                src={ noteActive.url}\r\n                                alt=\"imagen\"\r\n\r\n                            />\r\n                        </div>\r\n                    )\r\n                }\r\n\r\n            </div>\r\n\r\n            <button className=\"btn btn-danger\" onClick={ handleDelete } >\r\n                Delete\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Sidebar } from './Sidebar';\r\nimport { NothingSelected } from './NothingSelected';\r\nimport { NoteScreen } from './../notes/NoteScreen';\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport const JournalScreen = () => {\r\n\r\n    const { active } = useSelector(state => state.notes);\r\n\r\n    return (\r\n        <div className=\"journal__main-content\">\r\n\r\n            <Sidebar />\r\n\r\n            <main>\r\n                {\r\n                    (active)\r\n                        ? (<NoteScreen />)\r\n                        : (<NothingSelected />)\r\n                }\r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route { ...rest }\r\n            component={ \r\n                (props) => \r\n                    (isAuthenticated) \r\n                    ? (<Component {...props} />)\r\n                    : (<Redirect to=\"/auth/login\" />) \r\n            }\r\n        />\r\n    )\r\n\r\n}\r\n\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.oneOfType([ PropTypes.func, PropTypes.object] ).isRequired\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route {...rest}\r\n            component={\r\n                (props) => \r\n                    (isAuthenticated)\r\n                    ? (<Redirect to='/' />)\r\n                    : (<Component {...props} />)\r\n            }\r\n        />\r\n    )\r\n}\r\n\r\n\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.oneOfType( [PropTypes.func, PropTypes.object] ).isRequired\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { BrowserRouter as Router, Switch, Redirect } from 'react-router-dom';\r\nimport { AuthRouter } from './AuthRouter';\r\nimport { JournalScreen } from '../components/journal/JournalScreen';\r\nimport { firebase } from '../firebase/firebase-config';\r\nimport { useDispatch } from 'react-redux';\r\nimport { login } from '../actions/auth';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\nimport { startLoadingNotes } from './../actions/notes';\r\n\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const [ checking, setChecking ] = useState(true);\r\n    const [ isLoggedIn, setIsLoggedIn ] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        firebase.auth().onAuthStateChanged( async(user) => {\r\n\r\n            if (user?.uid) {\r\n                dispatch( login(user.uid, user.displayName) );\r\n                setIsLoggedIn(true);\r\n                dispatch( startLoadingNotes( user.uid) );\r\n            } else {\r\n                setIsLoggedIn(false);\r\n            }\r\n            \r\n            setChecking(false);\r\n\r\n        });\r\n        \r\n    }, [ dispatch, setChecking, setIsLoggedIn ])\r\n\r\n\r\n    if(checking) {\r\n        return (<h1>Wait...</h1>)\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute \r\n                        path='/auth'\r\n                        isAuthenticated={ isLoggedIn }   \r\n                        component={ AuthRouter } \r\n                    />\r\n\r\n                    <PrivateRoute \r\n                        exact \r\n                        path='/' \r\n                        isAuthenticated={ isLoggedIn } \r\n                        component={ JournalScreen } \r\n                    />\r\n\r\n                    {/* <Route path='/auth' component={ AuthRouter } />\r\n                    <Route exact path='/' component={ JournalScreen } /> */}\r\n                    <Redirect to='/auth/login' /> \r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport { store } from './store/store';\r\nimport { AppRouter } from './routers/AppRouter';\r\n\r\n\r\n\r\nexport const JournalApp = () => {\r\n    return (\r\n        <Provider store={ store }>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { JournalApp } from './JournalApp';\nimport './styles/styles.scss';\n\nReactDOM.render(\n  <JournalApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}